// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "01/20/2023 12:49:44"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    lab3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [0:0] BUTTON;
reg CLOCK_50_2;
reg [0:0] SW;
// wires                                               

// assign statements (if any)                          
lab3 i1 (
// port map - connection between master ports and signals/registers   
	.BUTTON(BUTTON),
	.CLOCK_50_2(CLOCK_50_2),
	.SW(SW)
);
initial 
begin 
#1000000 $finish;
end 

// BUTTON
initial
begin
	repeat(31)
	begin
		BUTTON = 1'b0;
		BUTTON = #16000 1'b1;
		# 16000;
	end
	BUTTON = 1'b0;
end 

// BUTTON[0]
initial
begin
	BUTTON[0] = 1'b0;
end 

// CLOCK_50_2
always
begin
	CLOCK_50_2 = 1'b0;
	CLOCK_50_2 = #2500 1'b1;
	#2500;
end 

// SW
initial
begin
	SW = 1'b0;
end 

// SW[0]
initial
begin
	SW[0] = 1'b0;
end 
initial 
begin 
#1000000 $finish;
end 
endmodule

